{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 AppleColorEmoji;
\f3\fswiss\fcharset0 Helvetica-Oblique;\f4\fnil\fcharset0 Menlo-Regular;\f5\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;
}
{\colortbl;\red255\green255\blue255;\red253\green128\blue8;\red51\green51\blue51;\red0\green0\blue0;
\red36\green41\blue47;\red251\green95\blue44;\red31\green31\blue31;\red255\green255\blue255;\red239\green239\blue239;
\red0\green0\blue0;\red66\green70\blue76;\red127\green127\blue127;\red0\green0\blue0;\red26\green28\blue31;
\red244\green244\blue244;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c100000\c57637\c0;\csgenericrgb\c20000\c20000\c20000;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c14118\c16078\c18431;\csgenericrgb\c98431\c37255\c17255;\cssrgb\c16078\c16078\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c94902\c94902\c94902;
\cssrgb\c0\c0\c0;\csgenericrgb\c25882\c27451\c29804;\cssrgb\c57046\c57047\c57046;\csgray\c0;\cssrgb\c13725\c14902\c16078;
\cssrgb\c96471\c96471\c96471;\csgray\c0\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sb100\sa100\pardirnatural\partightenfactor0

\f0\b\fs22 \cf2 ### MUST DO FIRST ###\cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0 \cf0 #Ask for the administrator password upfront\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo -v\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Install Xcode\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 xcode-select --install\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf4 #Install all available software updates
\f0\b \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0 \cf3 sudo softwareupdate -ia\
\
#Install Apple Rosetta 2:\
/usr/sbin/softwareupdate --install-rosetta\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Keep-alive: update existing `sudo` time stamp until `.macos` has finished\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Allow third-party software\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo spctl --master-disable\
\
# Change login shell to zsh\
chsh -s /bin/zsh\
\
#Xcode won't ask for password with every build\
DevToolsSecurity -enable\
____
\f0\b \cf2 \
\
## SET ENVIRONMENT ## 
\f1\b0 \cf5 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf6 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf4 #Set terminal prompt\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 export PS1=" ~ % "\
\
#Formatting computer name\
computerName=$loggedInUser'Macbook Pro 2020'\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf4 #Set computer name\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 echo "Setting computer name to $computerName locally..."\
scutil --set ComputerName "Liselot's MacBook Pro 2020"\cf4 \uc0\u8232 \cf3 scutil --set HostName "Host-Liselot"\cf4 \uc0\u8232 \cf3 scutil --set LocalHostName "Localhost-Liselot"\
\
sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName "Liselot-net"\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf4 #User Home Directory\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 $ cd ~/\cf0 \
\
\cf3 ____\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b \cf2 ## 
\f2\b0 \cf2 \uc0\u55356 \u57210 
\f1 \cf2  
\f0\b HOMEBREW ## 
\f1\b0 \cf0 \
\
#Install homebrew\
#
\f3\i \AppleTypeServices\AppleTypeServicesF65539 \cf7 \cb8 \expnd0\expndtw0\kerning0
This will install Homebrew in the \AppleTypeServices \cb9 /opt/homebrew/bin/brew\AppleTypeServices\AppleTypeServicesF65539 \cb8  directory. When you install apps using Homebrew it installs them to the \AppleTypeServices \cb9 /opt/homebrew/Cellar\AppleTypeServices\AppleTypeServicesF65539 \cb8  directory and creates a symlink in the \AppleTypeServices \cb9 /opt/homebrew/bin\AppleTypeServices\AppleTypeServicesF65539 \cb8  directory.\AppleTypeServices \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\i0 \cf0 ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\cf3 \
\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 #Install the latest version and set as current user's default shell\
brew install zsh && \\\
sudo sh -c 'echo $(brew --prefix)/bin/zsh >> /etc/shells' && \\\
chsh -s $(brew --prefix)/bin/zsh\
\
read -p "Password: " sudo_pass\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf11 #Make sure the homebrew bin directory is in your\'a0$PATH\'a0in order to use installed packages:\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 export PATH=$HOME/homebrew/bin:$PATH\
\
#Add repo with drivers to cask (needed for Steelseries Engine and Logitech Camera Settings)\
brew tap homebrew/cask-drivers\cf10 \
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf3 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf11 #Install utilities\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 arch -arm64 brew install coreutils #GNU File, Shell, and Text utilities;\
arch -arm64 brew install moreutils\
arch -arm64 brew install findutils;\cf10 \
\cf3 arch -arm64 \cf10 brew install --debug node;\
\cf3 arch -arm64 \cf10 brew install wget;\
\cf3 arch -arm64 \cf10 brew install z;\
\cf3 arch -arm64 \cf10 brew install ag;\
\cf3 arch -arm64 \cf10 brew install ack;\
\cf3 arch -arm64 \cf10 brew install fd;\
\cf3 arch -arm64 \cf10 brew install ffind;\
\cf3 arch -arm64 \cf10 brew install fpp;\
\cf3 arch -arm64 \cf10 brew install tmux;\
\cf3 arch -arm64 brew install zsh;\
arch -arm64 brew install \cf10 grep --with-default-names;\cf3 \
arch -arm64 brew install less;\
arch -arm64 brew install \cf10 trash;\
\cf3 arch -arm64 \cf10 brew install mysql;\
\cf3 arch -arm64 \cf10 brew install rsync;\
\cf3 arch -arm64 \cf10 brew install postgresql;\
\cf3 arch -arm64 \cf10 brew install ruby-build;\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf11 #Install packages\cf10 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 arch -arm64 \cf10 brew install mas # Install AppStore CLI installer;\
\cf3 arch -arm64 \cf10 brew install mint #Dependency manager that installs and runs Swift command-line tool packages;\
\cf3 arch -arm64 \cf10 brew install dmg2img #Utilities for converting macOS DMG images;\
\cf3 arch -arm64 \cf10 brew install zsh-completions;\
\cf3 arch -arm64 brew install \cf10 \CocoaLigature0 --cask dotnet-sdk\cf10 \CocoaLigature1 ;\cf3 \
arch -arm64 brew install go;\
arch -arm64 brew install ghostscript;\
arch -arm64 brew install\
arch -arm64 brew install\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf12 #Unused\
# swiftlint #Linter for swift language\
# carthage #Dependency manager for iOS apps\
# gnupg #OpenPGP for signing and encrypting\
# pinentry-mac #App to use macOS native keychain for PGP passwords\
# pandoc #Markup to Word/Open office converter needed by Typora\
# pandoc-citeproc #Pandoc's citation parser\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf10 \
# list of AppStore apps\
\cf3 arch -arm64 \cf10 brew install 497799835 #Xcode (Apple IDE);\
arch -arm64 brew install 975937182 #Fantastical 3 (Calendar app);\
arch -arm64 brew install 462054704 #Microsoft Word (Documents editor);\
arch -arm64 brew install 462058435 #Microsoft Excel (Spreadsheets editor);\
arch -arm64 brew install 462062816 # Microsoft PowerPoint (Presentations editor);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf10 arch -arm64 brew install 
\f4 \cf13 \CocoaLigature0 985367838 #Microsoft Outlook;  \

\f1 \cf10 \CocoaLigature1 arch -arm64 brew install 
\f4 \cf13 \CocoaLigature0 784801555 #Microsoft OneNote;  \

\f1 \cf10 \CocoaLigature1 arch -arm64 brew install 
\f4 \cf13 \CocoaLigature0 823766827 #Microsoft OneDrive; 
\f1 \cf10 \CocoaLigature1 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf10 arch -arm64 brew install 1330801220 #quicktype (JSON to Code generator);\
arch -arm64 brew install 1388020431 #DevCleaner for Xcode (App for deleting old Xcode files in ~/Library/Developer folder);\
arch -arm64 brew install 
\f4 \cf13 \CocoaLigature0 1538761576 
\f1 \cf10 \CocoaLigature1 #
\f4 \cf13 \CocoaLigature0 Authenticator App; \uc0\u8206 \

\f1 \cf10 \CocoaLigature1 arch -arm64 brew install  # 
\f4 \cf13 \CocoaLigature0 \

\f1 \cf10 \CocoaLigature1 arch -arm64 brew install  # 
\f4 \cf13 \CocoaLigature0 \

\f1 \cf10 \CocoaLigature1 arch -arm64 brew install  # 
\f4 \cf13 \CocoaLigature0 \

\f1 \cf10 \CocoaLigature1 arch -arm64 brew install  # 
\f4 \cf13 \CocoaLigature0                        \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f1 \cf10 \CocoaLigature1 arch -arm64 brew install \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf10 arch -arm64 brew install \
arch -arm64 brew install \
arch -arm64 brew install \
arch -arm64 brew install \
arch -arm64 brew install \
arch -arm64 brew install \
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf11 #Install apps\cf10 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 arch -arm64 \cf10 brew install google-chrome;\
\cf3 arch -arm64 brew \cf10 install vlc;\
\cf3 arch -arm64 brew \cf10 install coderunner;\
\cf3 arch -arm64 brew \cf10 install Spotify;\
\cf3 arch -arm64 brew \cf10 install evernote;\
\cf3 arch -arm64 brew \cf10 install emacs --with-cocoa\
\cf3 arch -arm64 brew \cf10 install microsoft-teams;\
\cf3 arch -arm64 brew \cf10 install markdown;\
\cf3 arch -arm64 brew \cf10 install easyfind;\
\cf3 arch -arm64 brew \cf10 install mactex;\
\cf3 arch -arm64 brew \cf10 install transmission # Torrents client;\
\cf3 arch -arm64 brew \cf10 install sourcetree;\
\cf3 arch -arm64 brew \cf10 install sublime-text #Cross-platform code editor with it's own high performance rendering engine;\
\cf3 arch -arm64 brew \cf10 install macdown #Markdown 2 panes editor;\
\cf3 arch -arm64 brew \cf10 install dotnet-sdk #Dotnet language support;\
\cf3 arch -arm64 brew \cf10 install cheatsheet;\
\cf3 arch -arm64 brew \cf10 install adobe-creative-cloud;\
\cf3 arch -arm64 brew \cf10 install cakebrew;\
\cf3 arch -arm64 brew \cf10 install 
\f4 \cf13 \CocoaLigature0 zsh-syntax-highlighting;
\f1 \cf10 \CocoaLigature1 \
\cf3 arch -arm64 brew \cf10 install 
\f4 \cf13 \CocoaLigature0 zsh-navigation-tools;
\f1 \cf10 \CocoaLigature1 \
\cf3 arch -arm64 brew \cf10 install 
\f4 \cf13 \CocoaLigature0 zsh-autosuggestions;
\f1 \cf10 \CocoaLigature1 \
\cf3 arch -arm64 brew \cf10 install \
\cf3 arch -arm64 brew \cf10 install \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf12 #Unused apps\
# pycharm-ce # Python IDE from JetBrains\
# webstorm # JavaScript IDE from JetBrains\
# intellij-idea-ce # Java IDE from JetBrains\
# insomnia # Open source HTTP requests tool\
# paw # MacOS native HTTP requests tool\
# paragon-ntfs # Support for NTFS file system\
# zoomus # Video conference App\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 #Install more recent versions of some OS X tools:\
arch -arm64 brew install vim --override-system-vi;\
arch -arm64 brew install homebrew/dupes/grep;\
arch -arm64 brew install homebrew/dupes/openssh;\
arch -arm64 brew install homebrew/dupes/screen;\
arch -arm64 brew install homebrew/php/php56 --with-gmp\
\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf12 #Link all applications\
#mkdir $HOME/Applications;\
#brew linkapps\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf3 \

\f0\b \cf10 $ {\field{\*\fldinst{HYPERLINK "https://github.com/sindresorhus/quick-look-plugins"}}{\fldrslt Quicklook plugins}} $
\f1\b0 \cf10 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 arch -arm64 \cf10 brew install qlcolorcode #syntax highlighting in preview;\
\cf3 arch -arm64 \cf10 brew install qlstephen #preview plaintext files without extension;\
\cf3 arch -arm64 \cf10 brew install qlmarkdown #preview markdown files;\
\cf3 arch -arm64 \cf10 brew install quicklook-json #preview json files;\
\cf3 arch -arm64 \cf10 brew install epubquicklook #preview epubs, make nice icons;\
\cf3 arch -arm64 \cf10 brew install quicklook-cs\cf3 \
\
#Update\
brew update\
\
#Remove outdated versions from the cellar\
brew cleanup \
\uc0\u8232 \cf0 #\cf3 Upgrade any already-installed formulae\
brew upgrade\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf11 #Create an alias that updates homebrew, upgrades any installed formulas, and then cleans up any files that are no longer necessary:\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 alias sysup='brew update && brew upgrade; brew cleanup'\
\
#Update installed apps and clear caches\
brew update;\
brew upgrade;\
brew cask upgrade;\
brew cleanup\
sudo rm -rf ~/Library/Caches/Homebrew\
\
____
\f0\b \cf2 \
\
## ZSH SHELL ## 
\f1\b0 \cf3 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
#Install Oh-My-Zsh\
sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"\
\
#\cf13 \CocoaLigature0 Open .zshrc file\
Open ~/.zshrc\
\
# Install terminal colors for zsh (light theme)\
# Use this generator to translate BSD colors and Linux colors: https://geoff.greer.fm/lscolors/\
echo -e 'export LSCOLORS="ExFxBxDxCxegedabagacad"' >> ~/.zshrc\
echo -e 'export LS_COLORS="di=1;34:ln=1;35:so=1;31:pi=1;33:ex=1;32:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43"' >> ~/.zshrc\
echo -e "zstyle ':completion:*:default' list-colors \\$\{(s.:.)LS_COLORS\}" >> ~/.zshrc\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 \CocoaLigature1 \
#Replaces default theme with jreese theme (works great with light theme)\
sed -i -e 's/ZSH_THEME="robbyrussell"/ZSH_THEME="jreese"/g' ~/.zshrc\
\
#Uncomment en_US.UTF-8 locale for console, making them undependable from macOS locale settings\
sed -i -e 's/# export LANG=en_US.UTF-8/export LANG=en_US.UTF-8/g' ~/.zshrc\
\
\pard\pardeftab720\partightenfactor0
\cf14 \cb15 \expnd0\expndtw0\kerning0
ZSH_DISABLE_COMPFIX=true\cf3 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 ____
\f0\b \cf2 \
\
## GIT ## 
\f1\b0 \cf3 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf5 \
#Install git\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 arch -arm64 brew install git\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf5 #git version (output should be\'a0/usr/local/bin/git)\
which git\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b \cf5 $ Basic git configuration $
\f1\b0 \
\
#Define your Git user (they will get added to your\'a0.gitconfig\'a0file)\
git config --global user.name \'93Liselot3\
git config --global user.email \cf0 sweetthunder33@gmail.com\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf5 #Set up a global\'a0.gitignore\'a0file, located for instance in your home directory\
cd ~\
curl -O https://raw.githubusercontent.com/nicolashery/mac-dev-setup/master/.gitignore\
git config --global core.excludesfile ~/.git\
\
\pard\pardeftab720\partightenfactor0

\f0\b \AppleTypeServices\AppleTypeServicesF65539 \cf7 \cb8 \expnd0\expndtw0\kerning0
$ Global Git Config $\

\f1\b0 \AppleTypeServices\AppleTypeServicesF65539 \cb1 \
\AppleTypeServices \cb16 git config \'97 global push.default current;\
git config \'97 global core.excludesfile ~/.gitignore;\
git config \'97 global user.name \'93Liselot3\'94;\
git config \'97 global user.email <\cf0 \cb1 \kerning1\expnd0\expndtw0 sweetthunder33@gmail.com\cf7 \cb16 \expnd0\expndtw0\kerning0
>;\
git config \'97 global color.branch auto;\
git config \'97 global color.diff auto;\
git config \'97 global color.interactive auto;\
git config \'97 global color.status auto;\
git config \'97 global alias.st status;\
git config \'97 global alias.ci commit;\
git config \'97 global alias.co checkout;\
git config \'97 global alias.br branch;\
git config \'97 global alias.lg \'93log \'97 graph \'97 pretty=format:\'92%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue <%an>%Creset\'92 \'97 abbrev-commit \'97 date=relative\'94\cf5 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 \
____
\f0\b \cf2 \
\
## FONTS ## \cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf4 \
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0

\f1\b0 \cf10 echo "Installing fonts..."\
\
brew tap homebrew/fonts\
\
#Install programming fonts\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 arch -arm64 \cf10 brew install font-fira-mono-for-powerline;\
\cf3 arch -arm64 \cf10 brew install font-fira-code\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 \
### SourceCodePro + Powerline + Awesome Regular (for powerlevel 9k terminal icons)\
cd ~/Library/Fonts && \{ curl -O '{\field{\*\fldinst{HYPERLINK "https://github.com/Falkor/dotfiles/blob/master/fonts/SourceCodePro+Powerline+Awesome+Regular.ttf?raw=true"}}{\fldrslt \cf10 https://github.com/Falkor/dotfiles/blob/master/fonts/SourceCodePro+Powerline+Awesome+Regular.ttf?raw=true}}' ; cd -; \}\
\
#Close any open System Preferences panes, to prevent them from overriding\
osascript -e 'tell application "System Preferences" to quit'\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b \cf4 \

\f1\b0 #Performs consistency check on registered fonts\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 atsutil fonts -verify\
\cf10 \
# Copy SF Mono font (available only in Xcode and Terminal.app) to the system\
cp -R /System/Applications/Utilities/Terminal.app/Contents/Resources/Fonts/. /Library/Fonts/
\f0\b \cf2 \

\f1\b0 \cf3 ____\
\
\pard\pardeftab720\sb100\sa100\pardirnatural\partightenfactor0

\f0\b \cf2 ## NPM ##\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0 \cf10 \
#Install node
\f0\b \cf2 \
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0

\f1\b0 \cf10 curl -o- {\field{\*\fldinst{HYPERLINK "https://raw.githubusercontent.com/creationix/nvm/v0.31.4/install.sh"}}{\fldrslt https://raw.githubusercontent.com/creationix/nvm/v0.31.4/install.sh}} | zsh;\
nvm install node;\
nvm use node
\f0\b \cf2 \
\cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0 \cf0 #Cleanup npm cache\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 npm cache clean --force\
\
npm audit --audit-level=high;\
npm install npm@latest -g --to upgrade;\
npm install --cache /tmp/empty-cache --delete temperatry cache;\
npm prune;\
npm audit;\
npm audit fix --force\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Determining which global packages need updating\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 npm outdated -g --depth=0\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Updating a single global package\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 npm update -g <package_name>\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Updating all globally-installed packages\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 npm update -g\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Get the current global location\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 npm config get prefix\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #List global packages\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 npm list --global\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Show just the packages with their version number\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 npm list -g --depth=0;\
npm cache clean --force\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #purge all node_module folders from your workspace if you have multiple node projects on your system you want to clean up:\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 find . -name "node_modules" -type d -exec rm -rf '\\\{\\\}' +\\
\f0\b \cf2 \

\f1\b0 \cf3 \
____
\f0\b \cf2 \
\
## PYTHON ## 
\f5\b0\fs24 \cf10 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\fs22 \cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 #Install python \
arch -arm64 brew install python3\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
#Install with get-pip.py\
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\
\
#Then run the following command in the folder where you have downloaded get-pip.py\
python3 get-pip.py\
\
#Upgrade\
pip install -U pip\
\
#Outdated\
pip list --outdated\
\
#Version\
pip --version\
pip3 --version\
\
sudo python3 -m ensurepip --default-pip\
\
pip install --upgrade pip;\
pip3 install --upgrade pip\
\
#cache (/Users/liselot/Library/Caches/pip)\
#available actions: dir, info, list, purge, remove\
pip3 cache purge;\
pip cache purge\
\
#update apps\
pip3 list --outdated\
pip install -U [app name]\
\
#upgrade\
pip3 list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1 | xargs -n1 pip3 install -U;\
pip list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1 | xargs -n1 pip install -U\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 #Install & update pip\
arch -arm64 pip install --upgrade pip;\
arch -arm64 pip install Pygments;\
\
arch -arm64 \cf10 brew install pyenv;\
\cf3 arch -arm64 \cf10 brew install openssl readline sqlite3 xz zlib;\
\cf3 arch -arm64 \cf10 brew install pyenv-virtualenv;\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 pyenv virtualenvs\
\
#Install pipx\
pip3 install --user pipx;\
pipx install pipenv\
\
#Install argcomplete\
\pard\pardeftab720\partightenfactor0

\fs23\fsmilli11900 \cf10 \cb16 \expnd0\expndtw0\kerning0
python3 -m pip install argcomplete
\fs22 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 \
#Check version\
python3 --version\
python3 -m pip install --user --upgrade setuptools wheel\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 \cb16 \
#Ensure pip, setuptools, and wheel are up to date\
python3 -m pip install --upgrade pip setuptools\
\

\f0\b $ Linking $\

\f1\b0 \
\pard\pardeftab720\partightenfactor0
\cf10 \expnd0\expndtw0\kerning0
brew link python\
\
#To force the link and overwrite all conflicting files:\
brew link --overwrite python\
\
#To list all files that would be deleted:\
brew link --overwrite --dry-run python\
\
brew link --overwrite python\kerning1\expnd0\expndtw0 \
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 \cb1 \
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf12 \cb16 #pip3 install -r requirements-dev.txt\
#pip3  install -t lib -r requirements.txt\
\
#python3 -m pip install --user --upgrade pip\
#python3 -m pip install --user virtualenv \
#python3 -m venv env\
#python3 -m pip install requests\
#python3 -m pip install requests[security]\
#python3 -m pip install -r requirements.txt\
#python3 -m pip completion --zsh >> ~/.zprofile \cf3 \
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 \cb1 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 ____
\f0\b \cf2 \
\
## RUBY ## 
\f5\b0\fs24 \cf10 \
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0

\f1\fs22 \cf10 \
#Install CocoaPods dependency manager for iOS apps\
sudo gem install cocoapods\
\
#Install CocoaPods Keys plugin\
sudo gem install cocoapods-keys\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 ____
\f0\b \cf2 \
\
## DEFAULT SETTINGS ## 
\f5\b0\fs24 \cf10 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b\fs22 \cf0 \
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0

\f1\b0 \cf10 #Disabling compatibility check\
sudo nvram boot-args="-no_compat_check"\

\f0\b \cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0 \cf0 #Disable the warning before emptying the Trash\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.finder WarnOnEmptyTrash -bool false\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Enable Text Selection in Quick Look\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.finder QLEnableTextSelection -bool TRUE\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Prevent Apps From Saving to iCloud by Default\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool FALSE\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Enable the default "press & hold\\'94 behavior (key repeat) (disable with true)\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write -g ApplePressAndHoldEnabled -bool false\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #System highlight color for 'Today' in Calendar\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.ical CalUIUseSystemHighlightColorForToday -bool TRUE\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Always show the fully expanded Print dialog box\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write -g PMPrintingExpandedStateForPrint -bool TRUE\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Add quit option to finder\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.finder QuitMenuItem -bool TRUE\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Set default Finder view style to column\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.Finder FXPreferredViewStyle clmv\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Always show users library folder in Finder\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo chflags nohidden ~/Library/\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Remove auto hide dock delay\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.Dock autohide-delay -float 0 && killall Dock\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Speed up mission control animations\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.dock expose-animation-duration -float 0.12 && killall Dock\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Disable menu bar transparency\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write -g AppleEnableMenuBarTransparency -bool false\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Expand save panel by default\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write -g NSNavPanelExpandedStateForSaveMode -bool true\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Disable disk image verification\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 defaults write com.apple.frameworks.diskimages skip-verify -bool true;\
defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true;\
defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Automatically open a new Finder window when a volume is mounted\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true;\
sudo defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true \
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Avoid creating .DS_Store files on network volumes\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Disable Safari thumbnail cache for History & Top Sites\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Enable Safari debug menu\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write com.apple.Safari IncludeDebugMenu -bool true\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Disable resume system-wide\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false\
\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 #Remove All Unavailable Simulators\
xcrun simctl delete unavailable\
\
#clear all ACLs\
sudo chmod -RN /\cf0 \
\cf10 \
# Finder: show all filename extensions\
sudo defaults write NSGlobalDomain AppleShowAllExtensions -bool true\
\
# Finder: show status bar\
sudo defaults write com.apple.finder ShowStatusBar -bool true\
\
# Finder: allow text selection in Quick Look\
sudo defaults write com.apple.finder QLEnableTextSelection -bool true\
\
# Disable the warning when changing a file extension\
sudo defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false\
\
# Avoid creating .DS_Store files on network or USB volumes\
sudo defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true;\
sudo defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true\
\
#Set zsh as default shell\
chsh -s /bin/zsh\
\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0

\f0\b \cf10 $ Notification Center Service $
\f1\b0 \cf10 \
\
#Disable\
launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist && \\\
killall -9 NotificationCenter\
\

\f0\b \cf10 $ Battery $\
\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0

\f1\b0 \cf10 #Remaining Battery Percentage\
pmset -g batt | egrep "([0-9]+\\%).*" -o --colour=auto | cut -f1 -d';'\
\
#Remaining Battery Time\
pmset -g batt | egrep "([0-9]+\\%).*" -o --colour=auto | cut -f3 -d';'\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0

\f0\b \cf10 \
$ Trackpad, mouse, keyboard, Bluetooth accessories, and input $
\f1\b0 \cf10 \
\
#Trackpad: enable tap to click for this user and for the login screen\
sudo defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true;\
sudo defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1\
\
#Disable force click and haptic feedback\
sudo defaults write ~/Library/Preferences/com.apple.AppleMultitouchTrackpad.plist ForceSuppressed -bool true\
\

\f0\b \cf10 $ Mac App Store $
\f1\b0 \cf10 \
\
#Enable the automatic update check\
sudo defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true\
\
#Download newly available updates in background\
sudo defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1\
\
#Install System data files & security updates\
sudo defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1\
\

\f0\b \cf10 $ Activation of ARD Agent & Helper $ 
\f1\b0 \cf10 \
\
#Activate And Restart the ARD Agent and Helper\
sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -restart -agent -console\
\
#Deactivate and Stop the Remote Management Service\
sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -deactivate -stop\
\
#Remove Apple Remote Desktop Settings\
sudo rm -rf /var/db/RemoteManagement ; \\\
sudo defaults delete /Library/Preferences/com.apple.RemoteDesktop.plist ; \\\
defaults delete ~/Library/Preferences/com.apple.RemoteDesktop.plist ; \\\
sudo rm -r /Library/Application\\ Support/Apple/Remote\\ Desktop/ ; \\\
rm -r ~/Library/Application\\ Support/Remote\\ Desktop/ ; \\\
rm -r ~/Library/Containers/com.apple.RemoteDesktop\
\

\f0\b \cf10 $ Google Chrome $\
\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0

\f1\b0 \cf10 #Disable swipe navigation\
sudo defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false;\
sudo defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false\
\
#Use the system-native print preview dialog\
sudo defaults write com.google.Chrome DisablePrintPreview -bool true;\
sudo defaults write com.google.Chrome.canary DisablePrintPreview -bool true\
\
#Expand the print dialog by default\
sudo defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true;\
sudo defaults write com.google.Chrome.canary PMPrintingExpandedStateForPrint2 -bool true\
\
#Auto-open DevTools on every new tab\
#Open Chrome from the Command line and pass the --auto-open-devtools-for-tabs flag.\
/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --auto-open-devtools-for-tabs
\f0\b \cf10 \
\
$ Contacts $
\f1\b0 \cf10 \
\
#Enable debug mode\
defaults write com.apple.addressbook ABShowDebugMenu -bool true\cf3 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 ____\
\
\pard\pardeftab720\sb100\sa100\pardirnatural\partightenfactor0

\f0\b \cf2 ## MAC CLEANUP ##\cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0 \cf0 #Update installed apps & clear caches\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 brew analytics off;\
brew outdated;\
brew update;\
brew upgrade;\
brew cask upgrade;\
brew cleanup;\
brew tap "homebrew/bundle";\
rm -rf ~/Library/Caches/Homebrew\
\
#Create a symbolic link to the in\'a0~/bin\'a0with\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 sudo \cf3 ln -s ~/Projects/quickpkg/quickpkg ~/bin #Recursively Delete .DS_Store Files;\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo find . -type f -name '*.DS_Store' -ls -delete\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Delete caches\
\pard\pardeftab593\sl264\slmult1\pardirnatural\partightenfactor0
\cf10 sudo \cf3 rm -rf ~/Library/Caches/*\cf0 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 \
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Keep-alive: update existing `sudo` time stamp until `.macos` has finished\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 while true; \
do sudo -n true; sleep 60; kill -0 "$$" || exit; \
done 2>/dev/null &\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Update all brew related files
\f0\b \
\pard\pardeftab720\pardirnatural\partightenfactor0

\f1\b0 \cf3 brew update && brew upgrade && brew cleanup\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Clear DNS Cache\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo dscacheutil -flushcache && sudo killall -HUP mDNSResponder\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Empty the Trash on all mounted volumes and the main HDD\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo rm -rfv /Volumes/*/.Trashes/;\
sudo rm -rfv ~/.Trash/\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Clear Font Cache for Current User\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 atsutil databases -removeUser && \
atsutil server -shutdown && \
atsutil server -ping\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Clear System Log Files\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo rm -rfv /private/var/log/asl/;\
sudo rm -rfv /Library/Logs/DiagnosticReports/;\
sudo rm -rfv /Library/Logs/Adobe/;\
rm -rfv ~/Library/Containers/com.apple.mail/Data/Library/Logs/Mail/* &>/dev/null;\
rm -rfv ~/Library/Logs/CoreSimulator/\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Clear Adobe Cache Files\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo rm -rfv ~/Library/Application\\\\ Support/Adobe/Common/Media\\\\ Cache\\\\ Files/* &>/dev/null\\\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Cleanup XCode Derived Data &\'a0 Archives\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 rm -rfv ~/Library/Developer/Xcode/DerivedData/* &>/dev/null\\\
rm -rfv ~/Library/Developer/Xcode/Archives/* &>/dev/null\\\
rm -rfv ~/Library/Developer/Xcode/iOS Device Logs/* &>/dev/null\\\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Purge inactive memory\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 sudo purge\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Purge all node_module folders from your workspace if you have multiple node projects on your system you want to clean up:\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 find . -name "node_modules" -type d -exec rm -rf '\\\{\\\}' +\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Clear XCode caches\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 xcrun simctl delete unavailable\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Updated all outdated packages installed through the Mac app store\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 mas upgrade\{\\field\{\\*\\fldinst\{HYPERLINK "https://mail.google.com/mail/u/0/#inbox"\}\}\{\\fldrslt \cf0 https://mail.google.com/mail/u/0/#inbox\}\cf3 \}\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Cleanup pip cache\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 rm -rfv ~/Library/Caches/pip\
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf0 #Delete trash\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf3 rm -rdf ~/.Trash/*\
\
___\
\
\pard\pardeftab720\pardirnatural\partightenfactor0

\f0\b \cf12 ## UNUSED ##
\f1\b0 \cf3 \
\
\pard\pardeftab720\pardirnatural\partightenfactor0
\cf12 #Fix Catalina bug with "Insecure completion-dependent directories detected". Uncomment only when needed\
#compaudit | xargs chmod g-w,o-w\cf3 \
\
\
}